name: Windows Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-windows:
    name: Windows (Swift 5.10.1 via Installer)
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Visual Studio Build Tools
        run: |
          # Install Visual Studio Build Tools 2022
          winget install --id Microsoft.VisualStudio.2022.BuildTools --exact --force --custom "--add Microsoft.VisualStudio.Component.Windows11SDK.22000 --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.VC.Tools.ARM64"

      - name: Install Swift
        run: |
          # Download and install Swift 5.10.1
          $swiftVersion = "5.10.1"
          $swiftUrl = "https://download.swift.org/swift-$swiftVersion-release/windows10/swift-$swiftVersion-RELEASE-msvc2022.exe"
          $swiftInstaller = "swift-installer.exe"

          Write-Host "Downloading Swift $swiftVersion..."
          Invoke-WebRequest -Uri $swiftUrl -OutFile $swiftInstaller

          Write-Host "Installing Swift..."
          Start-Process -FilePath $swiftInstaller -ArgumentList "/quiet" -Wait

          # Add Swift to PATH
          $env:PATH = "C:\Program Files\Swift\bin;" + $env:PATH

          # Verify installation
          swift --version

      - name: Install zlib
        run: |
          # Install vcpkg
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
          C:\vcpkg\bootstrap-vcpkg.bat

          # Install zlib
          C:\vcpkg\vcpkg install zlib:x64-windows

          # Set environment variables for zlib
          $env:ZLIB_ROOT = "C:\vcpkg\installed\x64-windows"
          $env:PATH = "$env:ZLIB_ROOT\bin;$env:PATH"

      - name: Show Swift version
        run: swift --version

      - name: Build package
        run: swift build

      - name: Run all tests
        run: swift test --verbose

      - name: Run specific test groups
        run: |
          swift test --filter CoreTests
          swift test --filter ExtensionsTests
          swift test --filter FileOperationsTests
          swift test --filter ErrorHandlingTests
          swift test --filter StreamingTests
          swift test --filter ConcurrencyTests

      - name: Build CLI tool
        run: swift build --product SwiftZlibCLI

  # Build verification - Windows
  build-verification-windows:
    name: Build Verification (Windows)
    strategy:
      matrix:
        configuration: [debug, release]
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Visual Studio Build Tools
        run: |
          winget install --id Microsoft.VisualStudio.2022.BuildTools --exact --force --custom "--add Microsoft.VisualStudio.Component.Windows11SDK.22000 --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.VC.Tools.ARM64"

      - name: Install Swift
        run: |
          $swiftVersion = "5.10.1"
          $swiftUrl = "https://download.swift.org/swift-$swiftVersion-release/windows10/swift-$swiftVersion-RELEASE-msvc2022.exe"
          $swiftInstaller = "swift-installer.exe"

          Invoke-WebRequest -Uri $swiftUrl -OutFile $swiftInstaller
          Start-Process -FilePath $swiftInstaller -ArgumentList "/quiet" -Wait
          $env:PATH = "C:\Program Files\Swift\bin;" + $env:PATH

      - name: Install zlib
        run: |
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
          C:\vcpkg\bootstrap-vcpkg.bat
          C:\vcpkg\vcpkg install zlib:x64-windows
          $env:ZLIB_ROOT = "C:\vcpkg\installed\x64-windows"
          $env:PATH = "$env:ZLIB_ROOT\bin;$env:PATH"

      - name: Build package
        run: swift build -c ${{ matrix.configuration }}

      - name: Test package
        run: swift test -c ${{ matrix.configuration }}

      - name: Build CLI tool
        run: swift build -c ${{ matrix.configuration }} --product SwiftZlibCLI

  # Performance benchmarks - Windows
  benchmark-windows:
    name: Performance Benchmarks (Windows)
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Visual Studio Build Tools
        run: |
          winget install --id Microsoft.VisualStudio.2022.BuildTools --exact --force --custom "--add Microsoft.VisualStudio.Component.Windows11SDK.22000 --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.VC.Tools.ARM64"

      - name: Install Swift
        run: |
          $swiftVersion = "5.10.1"
          $swiftUrl = "https://download.swift.org/swift-$swiftVersion-release/windows10/swift-$swiftVersion-RELEASE-msvc2022.exe"
          $swiftInstaller = "swift-installer.exe"

          Invoke-WebRequest -Uri $swiftUrl -OutFile $swiftInstaller
          Start-Process -FilePath $swiftInstaller -ArgumentList "/quiet" -Wait
          $env:PATH = "C:\Program Files\Swift\bin;" + $env:PATH

      - name: Install zlib
        run: |
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
          C:\vcpkg\bootstrap-vcpkg.bat
          C:\vcpkg\vcpkg install zlib:x64-windows
          $env:ZLIB_ROOT = "C:\vcpkg\installed\x64-windows"
          $env:PATH = "$env:ZLIB_ROOT\bin;$env:PATH"

      - name: Run performance tests
        run: |
          swift test --filter PerformanceTests --verbose
          swift test --filter "testCompressionPerformance" --verbose
          swift test --filter "testDecompressionPerformance" --verbose
          swift test --filter "testMemoryEfficiency" --verbose
