name: Windows Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-windows:
    name: Windows (Swift 5.10.1)
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: "5.9.2"

      - name: Install Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v1

      - name: Setup Visual Studio environment
        run: |
          # Get the Visual Studio installation path
          $vsPath = & "C:\ProgramData\Chocolatey\bin\vswhere.exe" -products * -requires Microsoft.Component.MSBuild -property installationPath -latest

          # Set up Visual Studio environment
          $vcvarsall = Join-Path $vsPath "VC\Auxiliary\Build\vcvarsall.bat"
          if (Test-Path $vcvarsall) {
            # Run vcvarsall to set up environment variables
            cmd /c "`"$vcvarsall`" x64 && set" | ForEach-Object {
              if ($_ -match "^([^=]+)=(.*)$") {
                $name = $matches[1]
                $value = $matches[2]
                [Environment]::SetEnvironmentVariable($name, $value, "Process")
                echo "$name=$value" >> $env:GITHUB_ENV
              }
            }
          }
        shell: pwsh

      - name: Create comprehensive zlib.h
        run: |
          # Create a comprehensive zlib.h that includes all necessary types and functions
          $zlibDir = "C:\comprehensive-zlib"
          New-Item -ItemType Directory -Force -Path $zlibDir

          # Create comprehensive zlib.h content with all required types and functions
          echo "#ifndef ZLIB_H" | Out-File -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define ZLIB_H" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef unsigned char Bytef;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef unsigned int uInt;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef unsigned long uLong;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef unsigned long uLongf;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef long z_off_t;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_OK 0" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_STREAM_END 1" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_NEED_DICT 2" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_ERRNO (-1)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_STREAM_ERROR (-2)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_DATA_ERROR (-3)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_MEM_ERROR (-4)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_BUF_ERROR (-5)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_VERSION_ERROR (-6)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_NO_FLUSH 0" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_PARTIAL_FLUSH 1" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_SYNC_FLUSH 2" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_FULL_FLUSH 3" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_FINISH 4" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_BLOCK 5" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_TREES 6" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_FILTERED 1" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_HUFFMAN_ONLY 2" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_RLE 3" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_FIXED 4" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_DEFAULT_STRATEGY 0" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_DEFAULT_COMPRESSION (-1)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_DEFAULT_LEVEL (-2)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_NULL 0" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef struct z_stream_s {" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    const Bytef *next_in;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt avail_in;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uLong total_in;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    Bytef *next_out;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt avail_out;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uLong total_out;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    const char *msg;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    struct internal_state *state;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    void *zalloc;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    void *zfree;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    void *opaque;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int data_type;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uLong adler;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uLong reserved;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "} z_stream;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef z_stream *z_streamp;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef struct gz_header_s {" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int text;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uLong time;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int xflags;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int os;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    Bytef *extra;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt extra_len;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt extra_max;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    Bytef *name;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt name_max;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    Bytef *comment;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt comm_max;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int hcrc;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int done;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "} gz_header;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef gz_header *gz_headerp;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef int (*in_func)(void *, unsigned char **);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef int (*out_func)(void *, unsigned char *, unsigned int);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int compress(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int uncompress(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int compress2(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen, int level);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflateInit(z_streamp strm, int level);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflate(z_streamp strm, int flush);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflateEnd(z_streamp strm);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflateInit2(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflateParams(z_streamp strm, int level, int strategy);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflateSetHeader(z_streamp strm, gz_headerp head);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflateInit(z_streamp strm);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflate(z_streamp strm, int flush);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflateEnd(z_streamp strm);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflateInit2(z_streamp strm, int windowBits);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflateGetHeader(z_streamp strm, gz_headerp head);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflateBack(z_streamp strm, in_func in, void *in_desc, out_func out, void *out_desc);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "uLong adler32(uLong adler, const Bytef *buf, uInt len);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "uLong crc32(uLong crc, const Bytef *buf, uInt len);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "uLong compressBound(uLong sourceLen);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "const char* zlibVersion(void);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "const char* zError(int err);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#endif /* ZLIB_H */" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII

          echo "Created comprehensive zlib.h at $zlibDir"
          echo "C_INCLUDE_PATH=$zlibDir" >> $env:GITHUB_ENV
          echo "CPLUS_INCLUDE_PATH=$zlibDir" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Add MSVC lib path to LIB
        run: |
          $msvcLib = "$env:VCINSTALLDIR" + "Tools\MSVC\$env:VCToolsVersion\lib\x64"
          $windowsSdkLib = "$env:WindowsSdkDir" + "lib\$env:WindowsSDKLibVersion\um\x64"
          $windowsSdkUcrt = "$env:WindowsSdkDir" + "lib\$env:WindowsSDKLibVersion\ucrt\x64"
          echo "LIB=$env:LIB;$msvcLib;$windowsSdkLib;$windowsSdkUcrt" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Verify Swift installation
        run: |
          swift --version
          swift build --help
        shell: pwsh

      - name: Build and test
        run: |
          swift build
          swift test --parallel
        shell: pwsh

      - name: Run specific test groups
        run: |
          swift test --filter CoreTests
          swift test --filter ExtensionsTests
          swift test --filter FileOperationsTests
          swift test --filter ErrorHandlingTests
          swift test --filter StreamingTests
          swift test --filter ConcurrencyTests
        shell: pwsh

      - name: Build CLI tool
        run: |
          swift build --product SwiftZlibCLI
        shell: pwsh

  # Build verification - Windows
  build-verification-windows:
    name: Build Verification (Windows)
    strategy:
      matrix:
        configuration: [debug, release]
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: "5.9.2"

      - name: Install Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v1

      - name: Setup Visual Studio environment
        run: |
          # Get the Visual Studio installation path
          $vsPath = & "C:\ProgramData\Chocolatey\bin\vswhere.exe" -products * -requires Microsoft.Component.MSBuild -property installationPath -latest

          # Set up Visual Studio environment
          $vcvarsall = Join-Path $vsPath "VC\Auxiliary\Build\vcvarsall.bat"
          if (Test-Path $vcvarsall) {
            # Run vcvarsall to set up environment variables
            cmd /c "`"$vcvarsall`" x64 && set" | ForEach-Object {
              if ($_ -match "^([^=]+)=(.*)$") {
                $name = $matches[1]
                $value = $matches[2]
                [Environment]::SetEnvironmentVariable($name, $value, "Process")
                echo "$name=$value" >> $env:GITHUB_ENV
              }
            }
          }
        shell: pwsh

      - name: Create comprehensive zlib.h
        run: |
          # Create a comprehensive zlib.h that includes all necessary types and functions
          $zlibDir = "C:\comprehensive-zlib"
          New-Item -ItemType Directory -Force -Path $zlibDir

          # Create comprehensive zlib.h content with all required types and functions
          echo "#ifndef ZLIB_H" | Out-File -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define ZLIB_H" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef unsigned char Bytef;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef unsigned int uInt;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef unsigned long uLong;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef unsigned long uLongf;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef long z_off_t;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_OK 0" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_STREAM_END 1" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_NEED_DICT 2" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_ERRNO (-1)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_STREAM_ERROR (-2)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_DATA_ERROR (-3)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_MEM_ERROR (-4)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_BUF_ERROR (-5)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_VERSION_ERROR (-6)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_NO_FLUSH 0" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_PARTIAL_FLUSH 1" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_SYNC_FLUSH 2" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_FULL_FLUSH 3" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_FINISH 4" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_BLOCK 5" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_TREES 6" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_FILTERED 1" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_HUFFMAN_ONLY 2" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_RLE 3" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_FIXED 4" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_DEFAULT_STRATEGY 0" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_DEFAULT_COMPRESSION (-1)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_DEFAULT_LEVEL (-2)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_NULL 0" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef struct z_stream_s {" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    const Bytef *next_in;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt avail_in;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uLong total_in;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    Bytef *next_out;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt avail_out;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uLong total_out;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    const char *msg;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    struct internal_state *state;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    void *zalloc;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    void *zfree;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    void *opaque;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int data_type;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uLong adler;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uLong reserved;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "} z_stream;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef z_stream *z_streamp;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef struct gz_header_s {" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int text;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uLong time;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int xflags;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int os;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    Bytef *extra;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt extra_len;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt extra_max;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    Bytef *name;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt name_max;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    Bytef *comment;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt comm_max;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int hcrc;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int done;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "} gz_header;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef gz_header *gz_headerp;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef int (*in_func)(void *, unsigned char **);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef int (*out_func)(void *, unsigned char *, unsigned int);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int compress(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int uncompress(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int compress2(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen, int level);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflateInit(z_streamp strm, int level);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflate(z_streamp strm, int flush);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflateEnd(z_streamp strm);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflateInit2(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflateParams(z_streamp strm, int level, int strategy);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflateSetHeader(z_streamp strm, gz_headerp head);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflateInit(z_streamp strm);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflate(z_streamp strm, int flush);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflateEnd(z_streamp strm);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflateInit2(z_streamp strm, int windowBits);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflateGetHeader(z_streamp strm, gz_headerp head);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflateBack(z_streamp strm, in_func in, void *in_desc, out_func out, void *out_desc);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "uLong adler32(uLong adler, const Bytef *buf, uInt len);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "uLong crc32(uLong crc, const Bytef *buf, uInt len);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "uLong compressBound(uLong sourceLen);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "const char* zlibVersion(void);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "const char* zError(int err);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#endif /* ZLIB_H */" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII

          echo "Created comprehensive zlib.h at $zlibDir"
          echo "C_INCLUDE_PATH=$zlibDir" >> $env:GITHUB_ENV
          echo "CPLUS_INCLUDE_PATH=$zlibDir" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Add MSVC lib path to LIB
        run: |
          $msvcLib = "$env:VCINSTALLDIR" + "Tools\MSVC\$env:VCToolsVersion\lib\x64"
          $windowsSdkLib = "$env:WindowsSdkDir" + "lib\$env:WindowsSDKLibVersion\um\x64"
          $windowsSdkUcrt = "$env:WindowsSdkDir" + "lib\$env:WindowsSDKLibVersion\ucrt\x64"
          echo "LIB=$env:LIB;$msvcLib;$windowsSdkLib;$windowsSdkUcrt" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Build and test package
        run: |
          swift build -c ${{ matrix.configuration }}
          swift test -c ${{ matrix.configuration }}
          swift build -c ${{ matrix.configuration }} --product SwiftZlibCLI
        shell: pwsh

  # Performance benchmarks - Windows
  benchmark-windows:
    name: Performance Benchmarks (Windows)
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: "5.9.2"

      - name: Install Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v1

      - name: Setup Visual Studio environment
        run: |
          # Get the Visual Studio installation path
          $vsPath = & "C:\ProgramData\Chocolatey\bin\vswhere.exe" -products * -requires Microsoft.Component.MSBuild -property installationPath -latest

          # Set up Visual Studio environment
          $vcvarsall = Join-Path $vsPath "VC\Auxiliary\Build\vcvarsall.bat"
          if (Test-Path $vcvarsall) {
            # Run vcvarsall to set up environment variables
            cmd /c "`"$vcvarsall`" x64 && set" | ForEach-Object {
              if ($_ -match "^([^=]+)=(.*)$") {
                $name = $matches[1]
                $value = $matches[2]
                [Environment]::SetEnvironmentVariable($name, $value, "Process")
                echo "$name=$value" >> $env:GITHUB_ENV
              }
            }
          }
        shell: pwsh

      - name: Create comprehensive zlib.h
        run: |
          # Create a comprehensive zlib.h that includes all necessary types and functions
          $zlibDir = "C:\comprehensive-zlib"
          New-Item -ItemType Directory -Force -Path $zlibDir

          # Create comprehensive zlib.h content with all required types and functions
          echo "#ifndef ZLIB_H" | Out-File -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define ZLIB_H" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef unsigned char Bytef;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef unsigned int uInt;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef unsigned long uLong;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef unsigned long uLongf;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef long z_off_t;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_OK 0" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_STREAM_END 1" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_NEED_DICT 2" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_ERRNO (-1)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_STREAM_ERROR (-2)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_DATA_ERROR (-3)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_MEM_ERROR (-4)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_BUF_ERROR (-5)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_VERSION_ERROR (-6)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_NO_FLUSH 0" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_PARTIAL_FLUSH 1" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_SYNC_FLUSH 2" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_FULL_FLUSH 3" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_FINISH 4" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_BLOCK 5" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_TREES 6" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_FILTERED 1" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_HUFFMAN_ONLY 2" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_RLE 3" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_FIXED 4" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_DEFAULT_STRATEGY 0" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_DEFAULT_COMPRESSION (-1)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_DEFAULT_LEVEL (-2)" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#define Z_NULL 0" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef struct z_stream_s {" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    const Bytef *next_in;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt avail_in;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uLong total_in;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    Bytef *next_out;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt avail_out;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uLong total_out;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    const char *msg;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    struct internal_state *state;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    void *zalloc;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    void *zfree;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    void *opaque;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int data_type;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uLong adler;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uLong reserved;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "} z_stream;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef z_stream *z_streamp;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef struct gz_header_s {" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int text;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uLong time;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int xflags;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int os;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    Bytef *extra;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt extra_len;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt extra_max;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    Bytef *name;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt name_max;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    Bytef *comment;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    uInt comm_max;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int hcrc;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "    int done;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "} gz_header;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef gz_header *gz_headerp;" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef int (*in_func)(void *, unsigned char **);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "typedef int (*out_func)(void *, unsigned char *, unsigned int);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int compress(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int uncompress(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int compress2(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen, int level);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflateInit(z_streamp strm, int level);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflate(z_streamp strm, int flush);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflateEnd(z_streamp strm);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflateInit2(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflateParams(z_streamp strm, int level, int strategy);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int deflateSetHeader(z_streamp strm, gz_headerp head);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflateInit(z_streamp strm);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflate(z_streamp strm, int flush);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflateEnd(z_streamp strm);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflateInit2(z_streamp strm, int windowBits);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflateGetHeader(z_streamp strm, gz_headerp head);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "int inflateBack(z_streamp strm, in_func in, void *in_desc, out_func out, void *out_desc);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "uLong adler32(uLong adler, const Bytef *buf, uInt len);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "uLong crc32(uLong crc, const Bytef *buf, uInt len);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "uLong compressBound(uLong sourceLen);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "const char* zlibVersion(void);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "const char* zError(int err);" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII
          echo "#endif /* ZLIB_H */" | Add-Content -FilePath "$zlibDir\zlib.h" -Encoding ASCII

          echo "Created comprehensive zlib.h at $zlibDir"
          echo "C_INCLUDE_PATH=$zlibDir" >> $env:GITHUB_ENV
          echo "CPLUS_INCLUDE_PATH=$zlibDir" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Add MSVC lib path to LIB
        run: |
          $msvcLib = "$env:VCINSTALLDIR" + "Tools\MSVC\$env:VCToolsVersion\lib\x64"
          $windowsSdkLib = "$env:WindowsSdkDir" + "lib\$env:WindowsSDKLibVersion\um\x64"
          $windowsSdkUcrt = "$env:WindowsSdkDir" + "lib\$env:WindowsSDKLibVersion\ucrt\x64"
          echo "LIB=$env:LIB;$msvcLib;$windowsSdkLib;$windowsSdkUcrt" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Run performance tests
        run: |
          swift test --filter PerformanceTests --verbose
          swift test --filter 'testCompressionPerformance' --verbose
          swift test --filter 'testDecompressionPerformance' --verbose
          swift test --filter 'testMemoryEfficiency' --verbose
        shell: pwsh
